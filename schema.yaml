openapi: 3.0.3
info:
  title: Kenzie Commerce
  version: 0.0.1
  description: Projeto Final M5 Kenzie Commerce
paths:
  /api/docs/:
    get:
      operationId: api_docs_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/lists/:
    get:
      operationId: api_lists_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListList'
          description: ''
    post:
      operationId: api_lists_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/List'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/List'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
  /api/lists/{list_id}/:
    get:
      operationId: api_lists_retrieve
      parameters:
      - in: path
        name: list_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    put:
      operationId: api_lists_update
      parameters:
      - in: path
        name: list_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/List'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/List'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    patch:
      operationId: api_lists_partial_update
      parameters:
      - in: path
        name: list_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    delete:
      operationId: api_lists_destroy
      parameters:
      - in: path
        name: list_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/lists/{list_id}/add/{product_id}/:
    get:
      operationId: api_lists_add_retrieve
      parameters:
      - in: path
        name: list_id
        schema:
          type: integer
        required: true
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    put:
      operationId: api_lists_add_update
      parameters:
      - in: path
        name: list_id
        schema:
          type: integer
        required: true
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/List'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/List'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    patch:
      operationId: api_lists_add_partial_update
      parameters:
      - in: path
        name: list_id
        schema:
          type: integer
        required: true
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    delete:
      operationId: api_lists_add_destroy
      parameters:
      - in: path
        name: list_id
        schema:
          type: integer
        required: true
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/lists/{list_id}/remove/{product_id}/:
    put:
      operationId: api_lists_remove_update
      parameters:
      - in: path
        name: list_id
        schema:
          type: integer
        required: true
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRemoveProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListRemoveProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ListRemoveProduct'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRemoveProduct'
          description: ''
    patch:
      operationId: api_lists_remove_partial_update
      parameters:
      - in: path
        name: list_id
        schema:
          type: integer
        required: true
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedListRemoveProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedListRemoveProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedListRemoveProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRemoveProduct'
          description: ''
  /api/login/:
    post:
      operationId: api_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/orders/:
    get:
      operationId: api_orders_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
  /api/orders/{id}/:
    put:
      operationId: api_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/products/:
    get:
      operationId: api_products_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/products/{id}/lists/:
    post:
      operationId: api_products_lists_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/List'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/List'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
  /api/products/{id}/reviews/:
    get:
      operationId: api_products_reviews_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: api_products_reviews_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/sales/coupons/:
    get:
      operationId: api_sales_coupons_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCouponList'
          description: ''
    post:
      operationId: api_sales_coupons_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Coupon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Coupon'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
  /api/sales/coupons/{id}/:
    put:
      operationId: api_sales_coupons_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Coupon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Coupon'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
    patch:
      operationId: api_sales_coupons_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCoupon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCoupon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCoupon'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
  /api/sales/coupons/{id}/disabled/:
    put:
      operationId: api_sales_coupons_disabled_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponDisabled'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponDisabled'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponDisabled'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponDisabled'
          description: ''
    patch:
      operationId: api_sales_coupons_disabled_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCouponDisabled'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCouponDisabled'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCouponDisabled'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponDisabled'
          description: ''
  /api/shopping-cart/:
    get:
      operationId: api_shopping_cart_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShoppingCartList'
          description: ''
  /api/shopping-cart/{product_id}/:
    put:
      operationId: api_shopping_cart_update
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCartAdd'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCartAdd'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCartAdd'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartAdd'
          description: ''
    patch:
      operationId: api_shopping_cart_partial_update
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCartAdd'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCartAdd'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCartAdd'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartAdd'
          description: ''
  /api/shopping-cart/checkout/:
    put:
      operationId: api_shopping_cart_checkout_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
    patch:
      operationId: api_shopping_cart_checkout_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCart'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
  /api/users/:
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/orders/:
    get:
      operationId: api_users_orders_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street:
          type: string
          maxLength: 127
        number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        city:
          type: string
          maxLength: 127
        state:
          type: string
          maxLength: 2
        zip_code:
          type: string
          maxLength: 8
      required:
      - city
      - id
      - number
      - state
      - street
      - zip_code
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
      required:
      - id
      - name
    Coupon:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date
          readOnly: true
        is_avaiable:
          type: boolean
        validity:
          type: string
          format: date
          nullable: true
        user:
          type: string
          readOnly: true
      required:
      - created_at
      - discount
      - id
      - name
      - user
    CouponDisabled:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date
          readOnly: true
        is_avaiable:
          type: boolean
        validity:
          type: string
          format: date
          nullable: true
        user:
          type: string
          readOnly: true
      required:
      - created_at
      - discount
      - id
      - name
      - user
    List:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        user:
          type: string
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
      required:
      - id
      - name
      - products
      - user
    ListRemoveProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        user:
          type: string
          readOnly: true
      required:
      - id
      - name
      - products
      - user
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        client:
          type: string
          readOnly: true
        seller:
          type: string
          readOnly: true
        coupon:
          type: string
          readOnly: true
        total:
          type: object
          additionalProperties: {}
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
          readOnly: true
      required:
      - client
      - coupon
      - created_at
      - id
      - products
      - seller
      - total
    OrderProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        is_avaiable:
          type: boolean
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
          maxLength: 255
        category_name:
          type: string
          readOnly: true
        product_image:
          type: string
          format: uri
          nullable: true
        user:
          type: string
          readOnly: true
      required:
      - category_name
      - id
      - name
      - price
      - user
    PaginatedCouponList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Coupon'
    PaginatedListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/List'
    PaginatedOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PaginatedShoppingCartList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCart'
    PatchedCoupon:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date
          readOnly: true
        is_avaiable:
          type: boolean
        validity:
          type: string
          format: date
          nullable: true
        user:
          type: string
          readOnly: true
    PatchedCouponDisabled:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date
          readOnly: true
        is_avaiable:
          type: boolean
        validity:
          type: string
          format: date
          nullable: true
        user:
          type: string
          readOnly: true
    PatchedList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        user:
          type: string
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
    PatchedListRemoveProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        user:
          type: string
          readOnly: true
    PatchedOrder:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        client:
          type: string
          readOnly: true
        seller:
          type: string
          readOnly: true
        coupon:
          type: string
          readOnly: true
        total:
          type: object
          additionalProperties: {}
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
          readOnly: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        stock:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_avaiable:
          type: boolean
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
          maxLength: 255
        category_name:
          type: string
          readOnly: true
        stars:
          type: number
          format: double
          readOnly: true
        reviews_count:
          type: integer
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          writeOnly: true
        product_image:
          type: string
          format: uri
          nullable: true
        user:
          type: string
          readOnly: true
    PatchedShoppingCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartProduct'
          readOnly: true
    PatchedShoppingCartAdd:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartProduct'
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 127
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        email:
          type: string
          format: email
          maxLength: 127
        first_name:
          type: string
          maxLength: 127
        last_name:
          type: string
          maxLength: 127
        address:
          $ref: '#/components/schemas/Address'
        password:
          type: string
          writeOnly: true
          maxLength: 128
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 127
        stock:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_avaiable:
          type: boolean
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
          maxLength: 255
        category_name:
          type: string
          readOnly: true
        stars:
          type: number
          format: double
          readOnly: true
        reviews_count:
          type: integer
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          writeOnly: true
        product_image:
          type: string
          format: uri
          nullable: true
        user:
          type: string
          readOnly: true
      required:
      - category
      - category_name
      - id
      - name
      - price
      - reviews_count
      - stars
      - user
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        stars:
          type: integer
          maximum: 5
          minimum: 1
        review:
          type: string
        user:
          type: string
          readOnly: true
        product:
          type: string
          readOnly: true
      required:
      - id
      - product
      - review
      - stars
      - user
    ShoppingCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartProduct'
          readOnly: true
      required:
      - id
      - products
      - user
    ShoppingCartAdd:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCartProduct'
          readOnly: true
      required:
      - id
      - products
      - user
    ShoppingCartProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - id
      - name
      - price
    StatusEnum:
      enum:
      - PEDIDO REALIZADO
      - EM ANDAMENTO
      - ENTREGUE
      type: string
      description: |-
        * `PEDIDO REALIZADO` - Ordered
        * `EM ANDAMENTO` - In Progress
        * `ENTREGUE` - Delivered
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 127
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        email:
          type: string
          format: email
          maxLength: 127
        first_name:
          type: string
          maxLength: 127
        last_name:
          type: string
          maxLength: 127
        address:
          $ref: '#/components/schemas/Address'
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - address
      - email
      - first_name
      - id
      - last_name
      - password
      - username
    UserTypeEnum:
      enum:
      - Administrador
      - Vendedor
      - Cliente
      type: string
      description: |-
        * `Administrador` - Administrador
        * `Vendedor` - Vendedor
        * `Cliente` - Cliente
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
